{
  "hash": "dc8480912a56080ec4e6a03ae2051759",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LS 빅데이터 스쿨 Homework 6\"\nauthor: \"승학\"\ndate: \"2024-07-30\"\ncategories: [bigdata]\n\n---\n\n\n## 챕터 9-2 설문조사 그래프에서 각 성별 95% 신뢰구간 계산후 그리기\n\nnorm.ppf() 사용해서 그릴 것. 모분산은 표본 분산을 사용해서 추정\n\n위 아래 수직 막대기로 표시\n\n#### 패키지 불러오기\n\n::: {#5c83838f .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n```\n:::\n\n\n#### 데이터 불러오고 복사본 만들기\n\n::: {#4f117104 .cell execution_count=2}\n``` {.python .cell-code}\n# !pip install pyreadstat\nraw_welfare = pd.read_spss(\"C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/Koweps_hpwc14_2019_beta2.sav\")\nraw_welfare\n\nwelfare = raw_welfare.copy()\nwelfare.head()\n\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>h14_id</th>\n      <th>h14_ind</th>\n      <th>h14_sn</th>\n      <th>h14_merkey</th>\n      <th>h_new</th>\n      <th>h14_cobf</th>\n      <th>p14_wsc</th>\n      <th>p14_wsl</th>\n      <th>p14_wgc</th>\n      <th>p14_wgl</th>\n      <th>...</th>\n      <th>wc14_64</th>\n      <th>wc14_65</th>\n      <th>wc14_5aq4</th>\n      <th>wc14_5aq5</th>\n      <th>wc14_5aq6</th>\n      <th>h14_pers_income1</th>\n      <th>h14_pers_income2</th>\n      <th>h14_pers_income3</th>\n      <th>h14_pers_income4</th>\n      <th>h14_pers_income5</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>20101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.291589</td>\n      <td>0.291589</td>\n      <td>1307.764781</td>\n      <td>1307.764781</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>30101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.419753</td>\n      <td>0.419753</td>\n      <td>1882.570960</td>\n      <td>1882.570960</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>40101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.265263</td>\n      <td>0.265980</td>\n      <td>1189.691668</td>\n      <td>1192.908537</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1284.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>60101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.494906</td>\n      <td>0.495941</td>\n      <td>2219.630833</td>\n      <td>2224.273816</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>.</td>\n      <td>2.0</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>2304.0</td>\n      <td>NaN</td>\n      <td>1800.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>60101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>1.017935</td>\n      <td>1.017935</td>\n      <td>4565.389177</td>\n      <td>4565.389177</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>.</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 830 columns</p>\n</div>\n```\n:::\n:::\n\n\n#### 변수명 변경하기\n\n::: {#d1d6c734 .cell execution_count=3}\n``` {.python .cell-code}\nwelfare = welfare.rename(\n    columns = {\n        \"h14_g3\" : \"sex\",\n        \"h14_g4\" : \"birth\",\n        \"h14_g10\" : \"marriage_type\",\n        \"h14_g11\" : \"religion\",\n        \"p1402_8aq1\" : \"income\",\n        \"h14_eco9\" : \"code_job\",\n        \"h14_reg7\" : \"code_region\"\n    }\n)\n\nwelfare = welfare[[\"sex\", \"birth\", \"marriage_type\",\n                \"religion\", \"income\", \"code_job\", \"code_region\"]]\nwelfare\n\n# sex 칼럼 항목 male, female로 변경\nwelfare[\"sex\"] = np.where(welfare[\"sex\"] == 1, \"male\", \"female\")\nwelfare['sex'].value_counts()\n\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nsex\nfemale    7913\nmale      6505\nName: count, dtype: int64\n```\n:::\n:::\n\n\n#### 성별에 따른 평균 수입\n\n::: {#dffeaaaa .cell execution_count=4}\n``` {.python .cell-code}\nsex_income = welfare.dropna(subset = \"income\") \\\n                    .groupby(\"sex\", as_index = False) \\\n                    .agg(mean_income = (\"income\", \"mean\"))\nsex_income\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sex</th>\n      <th>mean_income</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>female</td>\n      <td>186.293096</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>male</td>\n      <td>349.037571</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### 그래프로 나타내기\n\n::: {#307992c2 .cell execution_count=5}\n``` {.python .cell-code}\nsns.barplot(data = sex_income, x = \"sex\", y = \"mean_income\",\n            hue = \"sex\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){width=593 height=429}\n:::\n:::\n\n\n#### 신뢰구간을 설정하는데 필요한 모수 칼럼으로 추가하기\n\n::: {#d95043d3 .cell execution_count=6}\n``` {.python .cell-code}\nsex_income = welfare.dropna(subset=\"income\") \\\n                    .groupby(\"sex\", as_index = False) \\\n                    .agg(mean_income = (\"income\",\"mean\"),\n                    std_income = (\"income\",\"std\"),\n                    n = (\"sex\",\"count\"))\nsex_income\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sex</th>\n      <th>mean_income</th>\n      <th>std_income</th>\n      <th>n</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>female</td>\n      <td>186.293096</td>\n      <td>132.057402</td>\n      <td>2245</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>male</td>\n      <td>349.037571</td>\n      <td>217.862254</td>\n      <td>2289</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### 성별에 따른 95% 신뢰구간 구하기\n\n::: {#d12e4425 .cell execution_count=7}\n``` {.python .cell-code}\nu_ci = norm.ppf(0.975, sex_income[\"mean_income\"],\n            sex_income[\"std_income\"] / np.sqrt(sex_income[\"n\"]))\n            \nd_ci = norm.ppf(0.025, sex_income[\"mean_income\"],\n            sex_income[\"std_income\"] / np.sqrt(sex_income[\"n\"]))\n        \npd.DataFrame([u_ci, d_ci])\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>191.755737</td>\n      <td>357.962550</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>180.830455</td>\n      <td>340.112592</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### 신뢰구간 시각화 하기\n\n::: {#3193f47f .cell execution_count=8}\n``` {.python .cell-code}\nsns.barplot(data = sex_income, x = \"sex\", y = \"mean_income\",\n            hue = \"sex\")\nplt.plot([0,0], [u_ci[0],d_ci[0]], color = \"red\", linewidth = 3)\nplt.plot([1,1], [u_ci[1],d_ci[1]], color = \"red\", linewidth = 3)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-9-output-1.png){width=593 height=429}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}