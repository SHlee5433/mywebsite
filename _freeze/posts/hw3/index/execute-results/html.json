{
  "hash": "5746084eba40ce5906c513fa8d2fd5d6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LS 빅데이터 스쿨 Homework 3\"\nauthor: \"승학\"\ndate: \"2024-07-22\"\ncategories: [bigdata]\n---\n\n::: {#14329974 .cell execution_count=1}\n``` {.python .cell-code}\nimport seaborn as sns\nimport pandas as pd\n\nmpg = pd.read_csv(\"data/mpg.csv\")\nmpg\nmpg_df = sns.scatterplot(data = mpg, x = \"cty\", y = \"hwy\")\nmpg_df\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=585 height=429}\n:::\n:::\n\n\n## 7-2 미국의 지역별 인구통계 정보를 담은 midwest.csv를 이용해 전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal(전체 인구), y축은 popasian(아시아인 인구)으로 된 산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.\n\n::: {#58994eba .cell execution_count=2}\n``` {.python .cell-code}\nmid = pd.read_csv(\"data/midwest.csv\")\nmid\n\nmid_df = sns.scatterplot(data = mid, x = \"poptotal\", y = \"popasian\") \\\n            .set(xlim = [0, 500000], ylim = [0, 10000])\nmid_df\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=635 height=434}\n:::\n:::\n\n\n## 8-1 어떤 회사에서 생산한 \"suv\" 차종의 도시 연비가 높은지 알아보려고 합니다. \"suv\" 차종을 대상으로 cty(도시 연비) 평균이 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요. 막대는 연비가 높은 순으로 정렬하세요.\n\n::: {#ca362cb2 .cell execution_count=3}\n``` {.python .cell-code}\nmpg = pd.read_csv(\"data/mpg.csv\")\nmpg\ndf_mpg = mpg.query(\"category == 'suv'\") \\\n    .groupby(\"manufacturer\", as_index = False) \\\n    .agg(mean_cty = (\"cty\", \"mean\")) \\\n    .sort_values(\"mean_cty\", ascending = False) \\\n    .head()\ndf_mpg\n\nsns.barplot(data =df_mpg, x = \"manufacturer\", y = \"mean_cty\", hue = \"manufacturer\")\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-1.png){width=597 height=429}\n:::\n:::\n\n\n## 8-2 자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.\n\n::: {#9a5d5dc3 .cell execution_count=4}\n``` {.python .cell-code}\nmpg_new = mpg.groupby(\"category\", as_index = False) \\\n            .agg(n = (\"category\", \"count\")) \\\n            .sort_values(\"n\", ascending = False)\nmpg_new\n\nsns.barplot(data = mpg_new, x = \"category\", y = \"n\", hue = \"category\")\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=585 height=429}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}