---
title: "LS 빅데이터 스쿨 Homework 8"
author: "승학"
date: "2024-09-02"
categories: [bigdata]

---

# Q1. ADP 표본점수

**2022년에 실시 된 ADP 실기 시험의 통계파트 표준점수는 평균이 30, 표준편차가 5인 정규분포를 따른다고 한다.**

## Q1-1 

**ADP 실기 시험의 통계파트 표준점수의 밀도함수를 그려보세요.**

```{python}

# 패키지 불러오기
from scipy.stats import norm
import numpy as np
import matplotlib.pyplot as plt

# X ~ N(30, 5)

x = np.linspace(0, 60, 100)
y = norm.pdf(x, 30, 5)

plt.plot(x, y, color = "blue")
plt.show()
plt.clf()


```

## Q1-2 

**ADP 수험생을 임의로 1명을 선택하여 통계 점수를 조회했을때 45점 보다 높은 점수를 받았을 확률을 구하세요.**

```{python}

# X ~ N(30, 5)

1 - norm.cdf(45, 30, 5)

```

## Q1-3 

**슬통이는 상위 10%에 해당하는 점수를 얻었다고 한다면, 슬통이의 점수는 얼마인지 계산해보세요.**

```{python}

# X ~ N(30, 5)

norm.ppf(0.9, 30, 5)

```

## Q1-4 

**슬기로운 통계생활의 해당 회차 수강생은 16명이었다고 한다. 16명의 통계 파트 점수를 평균 내었을 때, 이 평균값이 따르는 분포의 확률밀도 함수를 1번의 그래프와 겹쳐 그려보세요.**

```{python}

# 패키지 불러오기
from scipy.stats import norm
import numpy as np
import matplotlib.pyplot as plt

# X ~ N(30, 5)
# 1번 그래프
x = np.linspace(0, 60, 100)
y = norm.pdf(x, 30, 5)

plt.plot(x, y, color = "blue")

# 수강생 16명의 확률밀도 함수
# X2 ~ N(30, 5/4)
# 2번 그래프

x = np.linspace(0, 60, 100)
y2 = norm.pdf(x, 30, 5/np.sqrt(16))

plt.plot(x, y2, color = "red")
plt.show()
plt.clf()

```

## Q1-5 

**슬기로운 통계생활 ADP 반 수강생들의 통계점수를 평균내었다고 할 때, 이 값이 38점보다 높게 나올 확률을 구하세요.**

```{python}

# 슬통 ADP반 수강생들의 확률밀도 함수 
# X3 ~ N(30, 5/4)

1 - norm.cdf(38, 30, 5/np.sqrt(16))

```

# Q2. Covid 19 발병률

**Covid‑19의 발병률은 1%라고 한다. 다음은 이번 코로나 사태로 인하여 코로나 의심 환자들 1,085명을 대상으로 슬통 회사의 “다잡아” 키트를 사용하여 양성 반응을 체크한 결과이다.**

```{python}

import pandas as pd

# 데이터를 Pandas DataFrame으로 생성
data = {
    "실제 \\ 키트": ["양성", "음성", "합계"],
    "양성": [370, 15, 385],
    "음성": [10, 690, 700],
    "합계": [380, 705, 1085]
}

df = pd.DataFrame(data)
df

```

## Q2-1 

**다잡아 키트가 코로나 바이러스에 걸린 사람을 양성으로 잡아낼 확률을 계산하세요.**

```{python}

# P(DP|TP) = P 
P = 370/385

```

## Q2-2 

**슬통 회사에서 다잡아 키트를 사용해 양성으로 나온 사람이 실제로는 코로나 바이러스에 걸려있을 확률을 97%라며, 키트의 우수성을 주장했다. 이 주장이 옳지 않은 이유를 서술하세요.**

```{python}

# 사전확률 = 97% 주장

# P(TP|DP) = P
P = 370/380
P = 0.97

# 주장이 맞는데,,

```

## Q2-3 
**Covid‑19 발병률을 사용하여, 키트의 결과값이 양성으로 나온 사람이 실제로 코로나 바이러스에 걸려있을 확률을 구하세요.**

```{python}

# Covid-19 발병률 = 0.01
# P(TP) = 0.01
# P(TP|DP) = P(TP∩DP)/P(DP) = P(TP)*P(DP|TP)/P(TP)*P(DP|TP) + P(TN)*P(DP|TN)
# P(TP|DP) = P

P = 0.01 * (370/385)/(0.01*(370/385) + 0.99*(10/700)) 
print(P)


```

# Q3. 카이제곱분포와 표본분산
**자유도가 𝑘인 카이제곱분포를 따르는 확률변수 𝑋 를 𝑋 ∼ 𝜒2(𝑘)과 같이 나타내고, 이 확률변수의 확률밀도함수는 다음과 같습니다.𝑓𝑋(𝑥; 𝑘) = 1 / (2^𝑘/2 * Γ(𝑘/2)) * 𝑥^𝑘/2−1 * 𝑒^−𝑥/2**

## Q3-1 

**자유도가 4인 카이제곱분포의 확률밀도함수를 그려보세요.**
```{python}

from scipy.stats import chi2
import numpy as np

x = np.linspace(0, 20, 200)
y = chi2.pdf(x, 4)

plt.plot(x, y)
plt.show

```

## Q3-2 

**다음의 확률을 구해보세요. 𝑃 (3 ≤ 𝑋 ≤ 5)**

```{python}

from scipy.stats import chi2
import numpy as np

a = chi2.cdf(5, 4)
b = chi2.cdf(3, 4)

a - b

```

## Q3-3 

**자유도가 4인 카이제곱분포에서 크기가 1000인 표본을 뽑은 후, 히스토그램을 그려보세요.**

```{python}

from scipy.stats import chi2
import numpy as np
import seaborn as sns

np.random.seed(2024)
df = chi2.rvs(4, size = 1000)

sns.histplot(df)
plt.show()

```

## Q3-4 

**자유도가 4인 카이제곱분포를 따르는 확률변수에서 나올 수 있는 값 중 상위 5%에 해당하는 값은 얼마인지 계산해보세요.**

```{python}

from scipy.stats import chi2
import numpy as np

chi2.ppf(0.95, 4)

```

## Q3-5 
**3번에서 뽑힌 표본값들 중 상위 5%에 위치한 표본의 값은 얼마인가요?**

```{python}

from scipy.stats import chi2
import numpy as np
import seaborn as sns

np.random.seed(2024)
df = chi2.rvs(4, size = 1000)

# 상위 5%에 위치한 표본의 값 (95번째 백분위수)
np.percentile(df, 95)

```

## Q3-6 
**평균이 3, 표준편차가 2인 정규분포를 따르는 확률변수에서 크기가 20인 표본, 𝑥1, ..., 𝑥20,을 뽑은 후 표본분산을 계산한 것을 (𝑠^2)1이라 생각해보죠. 다음을 수행해보세요!**

• 같은 방법으로 500개의 𝑠^2 들, (𝑠^2)1, (𝑠^2)2, ..., (𝑠^2)500 발생시킵니다.<br>

• 발생한 500개의 𝑠^2 들 각각에 4.75를 곱하고, 그것들의 히스토그램을 그려보세요. (히스토그램을 그릴 때 density = True 옵션을 사용해서 그릴 것) <br>

• 위에서 그린 히스토그램에 자유도가 19인 카이제곱분포 확률밀도함수를 겹쳐그려보세요.<br>

```{python}

from scipy.stats import chi2, norm
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
# X ~ N(3, 2)
# 평균 3, 표준편차가 2인 정규분포를 따르는 확률 변수에서 크기가 20인 표본 x1, ..., x20
np.random.seed(2024)
x = norm.rvs(loc = 3, scale = 2, size = 20)
np.var(x, ddof = 1)

# 500개의 표본분산 만들기
var500 = []
for i in range(500) :
    x = norm.rvs(loc = 3, scale = 2, size = 20)
    np.var(x, ddof = 1)
    var500.append(np.var(x, ddof = 1))

var500

# 500개 표본분산에 4.75 곱해주기
new_var = np.array(var500) * 4.75

# 히스토그램 density = True(y축을 밀도로 나타내줌)를 겯들인,,
plt.hist(new_var, bins = 50, density = True, edgecolor="black")

# 자유도 19인 카이제곱분포 확률밀도함수
x2 = np.linspace(0,new_var.max(), 200)
y = chi2.pdf(x2, 19)

plt.plot(x2, y, color = "red")
plt.show()

```