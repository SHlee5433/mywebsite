---
title: "testwebsite"
jupyter: python3
---

## Q1-1 다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.

```{python}
import pandas as pd

df = pd.DataFrame({"제품" : ["사과", "딸기", "수박"], "가격" : [1800, 1500, 3000],
                    "판매량" : [24, 38, 13]
    
})
df
```

## Q1-2 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.

```{python}
import pandas as pd

가격평균 = sum(df["가격"])/3
print( "가격의 평균 = ", 가격평균)

판매량평균 = sum(df["판매량"])/3
print("판매량의 평균 = ", 판매량평균)

```


## mpg 데이터를 이용해 분석 문제를 해결해 보세요.

## Q 2-1 mpg 데이터를 불러와 복사본을 만드세요.

```{python}
mpg = pd.read_csv("mpg.csv")
mpg

```



## Q 2-2 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요 .

```{python}

mpg = mpg.rename(columns = {"cty" : "city"})
mpg = mpg.rename(columns = {"hwy" : "highway"})
mpg

```


## Q 2-3 데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요. 다음과 같은 결과물이 출력되어야 합니다.

```{python}

mpg.head()

```

## midwest.csv는 미국 동북중부 437개 지역의 인구 통계 정보를 담고 있습니다. midwest.csv를 이용해 데이터 분석 문제를 해결해 보세요.

## Q 3-1 midwest.csv를  불러와 데이터의 특징을 파악하세요.

```{python}

mid = pd.read_csv("midwest.csv")
mid
mid.head
mid.tail
mid.shape
mid.info()
mid.describe()

```

## Q 3-2 poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.

```{python}

mid = mid.rename(columns = {"poptotal" : "total"})
mid = mid.rename(columns = {"popasian" : "asian"})

mid.columns

```

## Q 3-3 total, asian  변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 추가하고 히스토그램을 만들어 분포를 살펴보세요.

```{python}
import matplotlib.pyplot as plt

mid["전체 인구 대비 아시아 인구 백분율"] = (mid["asian"] / mid["total"]) * 100
mid["전체 인구 대비 아시아 인구 백분율"].plot.hist()
plt.show()
plt.clf()

```


## Q 3-4 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 'large', 그외에는 'small'을 부여한 파생변수를 만들어보세요.

```{python}
import numpy as np

mean=mid["전체 인구 대비 아시아 인구 백분율"].mean()
mid["PS"] = np.where(mid["전체 인구 대비 아시아 인구 백분율"] > mean, "large", "small")
mid
```


## Q 3-5 'large'와 'small'에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.

```{python}

mid["PS"].value_counts().plot.bar(rot = 0)
plt.show()
plt.clf()
type(mid["PS"])

```


## Q 4-1 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.

```{python}
import pandas as pd
mpg = pd.read_csv("mpg.csv")
mpg

mpg_a = mpg.query('displ <= 4')
mpg_b = mpg.query('displ >= 5')

mpg_a['hwy'].mean()
mpg_b['hwy'].mean()

```


## Q 4-2 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. 'audi'와 'toyota' 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.

```{python}

mpg_audi = mpg.query('manufacturer == "audi"')
mpg_toyota = mpg.query('manufacturer == "toyota"')

mpg_audi["cty"].mean()
mpg_toyota["cty"].mean()

```


## Q 4-3 'chevrolet', 'ford', 'honda' 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.

```{python}

mpg_new = mpg.query('manufacturer in ["chevrolet", "ford", "honda"]')
mpg_new["hwy"].mean()

```


## Q 5-1 'audi'에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. 'audi'에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.

```{python}

mpg.query("manufacturer == 'audi'")\
   .sort_values('hwy', ascending = False)\
   .head()



```


## Q 6-1 mpg 데이터 복사본을 만들고, cty와 hwy를 더한 '합산 연비 변수'를 추가하세요.

```{python}

mpg_new = mpg.copy()
mpg_new = mpg_new.assign(total = mpg["cty"] + mpg["hwy"])
mpg_new

```


## 6-2 앞에서 만든 '합산 연비 변수'를 2로 나눠 '평균 연비 변수'를 추가하세요.

```{python}

mpg_new = mpg_new.assign(mean = mpg_new["total"] / 2)
mpg_new

```


## 6-3 '평균 연비 변수'가 가장 높은 자동차 3종의 데이터를 출력하세요.

```{python}

mpg_new.sort_values("mean", ascending = False).head(3)


```


## 6-4 1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.

```{python}

mpg.assign(total = lambda x : x["cty"] + x["hwy"],
            mean = lambda x : x["total"]/2)\
            .sort_values("mean", ascending = False)\
            .head(3)



```

